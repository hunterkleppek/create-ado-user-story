name: 'Create ADO User Story'
description: 'Creates a user story in Azure DevOps from a GitHub issue'
inputs:
  ado-org:
    required: true
    description: 'Azure DevOps organization'
  ado-project:
    required: true
    description: 'Azure DevOps project'
  ado-epic-id:
    required: true
    description: 'Azure DevOps Epic ID'
  ado-pat:
    required: true
    description: 'Azure Personal Access Token'
  ado-work-item-type:
    required: false
    description: 'Azure DevOps Work Item Type (e.g., User Story, Product Backlog Item, Bug)'
    default: 'User Story'
  ado-area:
    required: true
    description: 'Azure DevOps Area Path for the work item'
  ado-tags:
    required: false
    description: 'Comma-separated list of tags to apply to the work item'
runs:
  using: 'composite'
  steps:
    - run: |
        ISSUE_TITLE="${{ github.event.issue.title }}"
        ISSUE_BODY="${{ github.event.issue.body }}"

        # Escape backslashes in area path for JSON
        RAW_AREA_PATH="${{ inputs.ado-area }}"
        ESCAPED_AREA_PATH=$(echo "$RAW_AREA_PATH" | sed 's/\\/\\\\/g')

        TAGS_VALUE="${{ inputs.ado-tags }}"

        # Build JSON patch array using jq for robust escaping
        jq -n \
          --arg title "$ISSUE_TITLE" \
          --arg desc "$ISSUE_BODY" \
          --arg tags "$TAGS_VALUE" \
          --arg area "$ESCAPED_AREA_PATH" \
          --arg parent_url "https://dev.azure.com/${{ inputs.ado-org }}/${{ inputs.ado-project }}/_apis/wit/workItems/${{ inputs.ado-epic-id }}" \
          '[
            {op: "add", path: "/fields/System.Title", value: $title},
            {op: "add", path: "/fields/System.Description", value: $desc},
            {op: "add", path: "/fields/System.Tags", value: $tags},
            {op: "add", path: "/fields/System.AreaPath", value: $area},
            {op: "add", path: "/relations/-", value: {rel: "System.LinkTypes.Hierarchy-Reverse", url: $parent_url}}
          ]' > payload.json

        WORK_ITEM_TYPE_ENC=$(echo -n "${{ inputs.ado-work-item-type }}" | sed 's/ /%20/g')
        CREATE_URL="https://dev.azure.com/${{ inputs.ado-org }}/${{ inputs.ado-project }}/_apis/wit/workitems/\$${WORK_ITEM_TYPE_ENC}?api-version=7.0"
        RESPONSE=$(curl --silent --show-error -X PATCH \
          -H "Content-Type: application/json-patch+json" \
          -H "Authorization: Basic $(echo -n :${{ inputs.ado-pat }} | base64 | tr -d '\n')" \
          --data-binary @payload.json \
          "$CREATE_URL")
        WORK_ITEM_ID=$(echo "$RESPONSE" | grep -o '"id":[0-9]*' | head -n1 | grep -o '[0-9]*')
        if [ -n "$WORK_ITEM_ID" ]; then
          STORY_URL="https://dev.azure.com/${{ inputs.ado-org }}/${{ inputs.ado-project }}/_workitems/edit/$WORK_ITEM_ID"
          echo "Created work item: $STORY_URL"
        else
          echo "Failed to parse work item ID from response."
        fi
      shell: bash
